
renat@Darkgosh-Lap MINGW64 /g/My Drive/Projectos de Software/PROYECTOS/Curso_git/PC_WINDOWS (main)
$ history
 
git init
git status
git commit -m "Primer Comit para la carpeta Main de la PC Windows"
git log
git show
git config --global user.name "Renato DarkGoshLap"
git config --global user.email "darkgoshmx@gmail.com"
git config -l
git add .
git add archivo.txt
git commit -m "Actualiacion de carpeta de Git y baja de archivos duplicados"
git commit -am "Agregue cambios que hice por error en master a cabecera"
git checkout cabecera
git checkout master
git merge cabecera
git switch -
git checkout 4e1de1a7f35a15e0e7849265a87d783b97f67c7e
git remote add origin https://github.com/darkgosh/Curso_GIT.git
git remote
git remote -v
git push origin master
git pull origin master --allow-unrelated-histories
git pull origin master

clear
history

renat@Darkgosh-Lap MINGW64 /g/My Drive/Projectos de Software/PROYECTOS/Curso_git/PC_WINDOWS (main)

Generar una nueva llave SSH: (Cualquier sistema operativo)

ssh-keygen -t rsa -b 4096 -C "youremail@example.com"

Comprobar proceso y agregarlo (Windows)

eval $(ssh-agent - s)
ssh-add ~/.ssh/id_rsa
Comprobar proceso y agregarlo (Mac)

eval "$(ssh-agent -s)"
¿Usas macOS Sierra 10.12.2 o superior?
Haz lo siguiente:

cd ~/.ssh
Crea un archivo config…
Con Vim vim config
Con VSCode code config
Pega la siguiente configuración en el archivo

#Agregar los comandos para crear TAGs
git tag
git log --all --graph --decorate --oneline
alias Resumen="git log --all --graph --decorate --oneline"
git tag -a prueba -m "prueba de creacion de tags" 77fbbd8
git push origin --tags
git tag -d Nombre_tag
git push origin :refs/tags/v0.2


#Manejo de Branches
git show-branch

gitk
git checkout cabecera
git push origin cabecera 
